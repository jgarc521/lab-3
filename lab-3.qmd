---
title: "Lab 3"
format: 
  dashboard:
    theme: flatly
    orientation: rows
    nav-buttons: 
      - icon: github
        href: https://github.com/jgarc521/lab-3
      - icon: envelope
        href: "mailto:jgarc521@calpoly.edu"
logo: wellcome-logos/wellcome-logo-black.jpg
logo-alt: Wellcome Logo
embed-resources: true
---

# Perceived Knowledge about Science

## Summary {height="15%"}

::: card
### ðŸŒŽ Quick Insight

Globally, 53% of those aged 15â€“29 say they know "some" or "a lot" about science, compared to 40% of people aged 30â€“49 and 34% of those 50 and older.
:::

## Plots {.tabset}

### By Country

```{r}
library(tidyverse)
library(wesanderson)
library(leaflet)
library(rnaturalearth)
library(plotly)

# read in data
dict <- readxl::read_excel("/Users/josegarcia/Desktop/STAT_541/wgm2018.xlsx", sheet = "Data dictionary")
df <- readxl::read_excel("/Users/josegarcia/Desktop/STAT_541/wgm2018.xlsx", sheet = "Full dataset") |>
  rename(code = WP5)

# country codes
country_codes_list <- dict$`Variable Type & Codes*`[1] |>
  str_split(", ", simplify = TRUE) |>
  as_tibble() |>
  pivot_longer(cols = (1:144), names_to = NULL, values_to = "col") |>
  separate_wider_delim("col", delim = "=", names = c("code", "country")) |>
  mutate(
  code = as.integer(str_trim(code)),
  country = str_trim(country) |> str_remove(",$")
)

# region codes
region_codes_list <- dict$`Variable Type & Codes*`[57] |>
  str_split(",", simplify = TRUE) |>
  as_tibble() |>
  pivot_longer(cols = everything(), names_to = NULL, values_to = "col") |>
  mutate(col = str_trim(col)) |> # trim white space
  filter(col != "") |> # filter out blanks
  separate_wider_delim("col", delim = "=", names = c("Regions_Report", "region")) |>
  mutate(
    region_code = as.integer(str_trim(Regions_Report)),
    region = str_trim(region),
    Regions_Report = as.integer(Regions_Report)
  )

# join data
full_data <- df |>
  left_join(country_codes_list, by = "code") |>
  left_join(region_codes_list, by = "Regions_Report")

world <- ne_countries(type = "countries", scale = "small")

science_pct <- full_data |>
  mutate(country = if_else(country == "United States", "United States of America", country)) |>
  group_by(country) |>
  summarise(
    total_strong = sum(Q1 %in% c(1, 2), na.rm = TRUE),
    total = n(),
    percent_strong = total_strong / total * 100
  )

map_data <- world |>
  left_join(science_pct, by = c("name" = "country"))

qpal <- colorNumeric("YlGnBu", domain = map_data$percent_strong, na.color = "white")

leaflet(map_data) |>
  addTiles() |>
  addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
    color = ~qpal(percent_strong),
    label = ~paste0(name, ": ", round(percent_strong, 1), "%")) |>
  addLegend(pal = qpal, values = map_data$percent_strong, title = "Knowledge Level (%)", position = "bottomright")|>
  addControl(
    html = "Map of perceived knowledge about science by country",
    position = "topright"
  ) |>
  setView(lng = 0, lat = 0, zoom = 2)

```

### By Region

```{r}
# region pct
region_pct <- full_data |> 
  filter(Q1 %in% c(1, 2, 3, 4, 98), !is.na(region)) |> 
  mutate(
    knowledge_level = case_when(
      Q1 == 1 ~ "A lot",
      Q1 == 2 ~ "Some",
      Q1 == 3 ~ "Not much",
      Q1 %in% c(4, 98) ~ "Nothing at all / Donâ€™t know"
    )
  ) |>
  group_by(region, knowledge_level) |>
  summarise(n = n(), .groups = "drop") |>
  group_by(region) |>
  mutate(percent = n / sum(n) * 100)

# global pct
global_pct <- full_data |> 
  filter(Q1 %in% c(1, 2, 3, 4, 98)) |> 
  mutate(
    knowledge_level = case_when(
      Q1 == 1 ~ "A lot",
      Q1 == 2 ~ "Some",
      Q1 == 3 ~ "Not much",
      Q1 %in% c(4, 98) ~ "Nothing at all / Donâ€™t know"
    )
  ) |>
  group_by(knowledge_level) |>
  summarise(n = n(), .groups = "drop") |>
  mutate(
    percent = n / sum(n) * 100,
    region = "World"
  )

# bind 
knowledge_all <- bind_rows(region_pct, global_pct)

# order levels
knowledge_all <- knowledge_all |> 
  mutate(
    knowledge_level = factor(
      knowledge_level,
      levels = c("A lot", "Some", "Not much", "Nothing at all / Donâ€™t know")
    )
  )

# custom colors (modified from previous plot)
custom_colors <- c(
  "A lot" = "#4292c6",                     
  "Some" = "#6baed6",                     
  "Not much" = "#c6dbef",                 
  "Nothing at all / Donâ€™t know" = "#fbd47a" 
)

# plot
p <- ggplot(knowledge_all, aes(x = percent, y = region, fill = knowledge_level, text = paste0(
    "Region: ", region, "<br>",
    "Knowledge Level: ", knowledge_level, "<br>",
    "Percent: ", round(percent, 1), "%"
  )
)) +
  geom_col(width = 0.7, position = "stack") +
  scale_fill_manual(values = custom_colors) +
  labs(
    title = "Perceived Knowledge of Science by Region",
    x = "",
    y = "",
    fill = "Knowledge Level"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    panel.grid.minor = element_blank(),
    panel.grid.major.y = element_blank(),
    axis.text.x = element_blank(),
    axis.text.y = element_text(size = 12)
  )

# convert to plotly
ggplotly(p, tooltip = "text") |>
  layout(
    legend = list(
      orientation = "h",
      x = 0.5,
      y = 1.10,
      xanchor = "center",
      font = list(size = 13)
    ),
    margin = list(t = 100)
  )
```

# Data & Sources

## Data Preview

```{r}
#| title: Wellcome Global Monitor Report 2018 Data
new_df <- head(df, 100)
knitr::kable(new_df)
```

## About the Data {height="15%"}

::: card
### [ðŸ“Š Something about the Data](https://wellcome.org/reports/wellcome-global-monitor/2018)

The Wellcome Global Monitor 2018 surveyed over 140,000 people aged 15 and older in more than 140 countries to understand global attitudes toward science and health. The data was collected between April and December 2018 through in-person and phone interviews. The survey asked about trust in scientists and healthcare workers, interest in science, and opinions on vaccines.
:::
